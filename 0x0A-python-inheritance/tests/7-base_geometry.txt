This is the doctest for ``BaseGeometry``
========================================
Using ``BaseGeometry``
----------------------

Importing module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Checking for module docstring:
	>>> m = __import__("7-base_geometry").__doc__
	>>> len(m) > 1
	True

Checking for class docsting:
	>>> c = __import__("7-base_geometry").BaseGeometry.__doc__
	>>> len(c) > 1
	True

Checking for corrext input types:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my int", 12)

Checking for TypeError: name must be an integer:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my int", "why")
	Traceback (most recent call last):
	TypeError: my int must be an integer

Checking for ValueError: ... greater than 0
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

Cgecking for one arg:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'


Checking for no arg:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Checking for area failure:
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

Checking too many arguments for area:
	>>> bg = BaseGeometry()
	>>> bg.area(1)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 2 were given

Checking for integer < 0:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", -4)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

Check for boolean input:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", True)
	Traceback (most recent call last):
	TypeError: age must be an integer

Check for None:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", None)
	Traceback (most recent call last):
	TypeError: age must be an integer

Check for a dict as input:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", {3, 4})
	Traceback (most recent call last):
	TypeError: age must be an integer

Check for a list as input:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", [3])
	Traceback (most recent call last):
	TypeError: age must be an integer

Check for a tuple as argument:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", (4,))
	Traceback (most recent call last):
	TypeError: age must be an integer
